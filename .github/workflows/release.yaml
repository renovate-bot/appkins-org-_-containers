name: Build and Release Containers

on:
  workflow_dispatch:
    inputs:
      targets:
        description: 'List of Dockerfiles'
        required: false
        default: ''
      platforms:
        description: 'List of platforms to build for'
        required: false
        default: 'linux/amd64,linux/arm64'
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - ./**/Dockerfile

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    outputs:
      files: ${{ steps.prepare-files.outputs.files }}
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Output changed files
        id: prepare-files
        run: |
          if [[ "${{ inputs.targets }}" != "" ]]; then
            files=$(echo "${{ inputs.targets }}" | jq -R -s -c 'split(",") | map(select(length>0))')
            echo "files=${files}" >> $GITHUB_OUTPUT
            exit 0
          fi

          changed=$(git diff --name-only HEAD HEAD~1 | grep Dockerfile | wc -l)

          if [[ $changed -eq 0 ]]; then
            echo "No Dockerfiles changed"
            echo "files=[]" >> $GITHUB_OUTPUT
            exit 0
          fi

          changed="${changed[@]%/Dockerfile}"
          changed="${changed[@]#apps/}"

          files=$(echo "${changed[@]%/Dockerfile}" | jq -R -s -c 'split("\n") | map(select(length>0))')

          echo "files=${files}" >> $GITHUB_OUTPUT

  release:
    name: Release Docker Images
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
      packages: write
      pages: write

    needs: ["prepare"]

    strategy:
      fail-fast: false
      matrix:
        file: ["${{ fromJSON(needs.prepare.outputs.files || '[]') }}"]
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Login to Github registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ghcr.io/${{ github.repository }}/${{ matrix.file }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: true
          context: "apps/${{ matrix.file }}"
          platforms: ${{ inputs.platforms }}
          tags: ${{ steps.meta.outputs.tags }}
